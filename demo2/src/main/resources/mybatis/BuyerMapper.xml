<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.BuyerMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Buyer" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="buyName" property="buyname" jdbcType="VARCHAR" />
    <result column="buySti" property="buysti" jdbcType="VARCHAR" />
    <result column="buyDate" property="buydate" jdbcType="TIMESTAMP" />
    <result column="houseId" property="houseid" jdbcType="INTEGER" />
    <result column="buyIncome" property="buyincome" jdbcType="INTEGER" />
    <result column="buyType" property="buytype" jdbcType="VARCHAR" />
    <result column="buyHJ" property="buyhj" jdbcType="VARCHAR" />
    <result column="buyPhone" property="buyphone" jdbcType="VARCHAR" />
    <result column="buyLevel" property="buylevel" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, buyName, buySti, buyDate, houseId, buyIncome, buyType, buyHJ, buyPhone, buyLevel
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.demo.entity.BuyerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from buyer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from buyer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from buyer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.BuyerExample" >
    delete from buyer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Buyer" >
    insert into buyer (id, buyName, buySti, 
      buyDate, houseId, buyIncome, 
      buyType, buyHJ, buyPhone, 
      buyLevel)
    values (#{id,jdbcType=INTEGER}, #{buyname,jdbcType=VARCHAR}, #{buysti,jdbcType=VARCHAR}, 
      #{buydate,jdbcType=TIMESTAMP}, #{houseid,jdbcType=INTEGER}, #{buyincome,jdbcType=INTEGER}, 
      #{buytype,jdbcType=VARCHAR}, #{buyhj,jdbcType=VARCHAR}, #{buyphone,jdbcType=VARCHAR}, 
      #{buylevel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Buyer" >
    insert into buyer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="buyname != null" >
        buyName,
      </if>
      <if test="buysti != null" >
        buySti,
      </if>
      <if test="buydate != null" >
        buyDate,
      </if>
      <if test="houseid != null" >
        houseId,
      </if>
      <if test="buyincome != null" >
        buyIncome,
      </if>
      <if test="buytype != null" >
        buyType,
      </if>
      <if test="buyhj != null" >
        buyHJ,
      </if>
      <if test="buyphone != null" >
        buyPhone,
      </if>
      <if test="buylevel != null" >
        buyLevel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="buyname != null" >
        #{buyname,jdbcType=VARCHAR},
      </if>
      <if test="buysti != null" >
        #{buysti,jdbcType=VARCHAR},
      </if>
      <if test="buydate != null" >
        #{buydate,jdbcType=TIMESTAMP},
      </if>
      <if test="houseid != null" >
        #{houseid,jdbcType=INTEGER},
      </if>
      <if test="buyincome != null" >
        #{buyincome,jdbcType=INTEGER},
      </if>
      <if test="buytype != null" >
        #{buytype,jdbcType=VARCHAR},
      </if>
      <if test="buyhj != null" >
        #{buyhj,jdbcType=VARCHAR},
      </if>
      <if test="buyphone != null" >
        #{buyphone,jdbcType=VARCHAR},
      </if>
      <if test="buylevel != null" >
        #{buylevel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.BuyerExample" resultType="java.lang.Integer" >
    select count(*) from buyer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update buyer
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.buyname != null" >
        buyName = #{record.buyname,jdbcType=VARCHAR},
      </if>
      <if test="record.buysti != null" >
        buySti = #{record.buysti,jdbcType=VARCHAR},
      </if>
      <if test="record.buydate != null" >
        buyDate = #{record.buydate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.houseid != null" >
        houseId = #{record.houseid,jdbcType=INTEGER},
      </if>
      <if test="record.buyincome != null" >
        buyIncome = #{record.buyincome,jdbcType=INTEGER},
      </if>
      <if test="record.buytype != null" >
        buyType = #{record.buytype,jdbcType=VARCHAR},
      </if>
      <if test="record.buyhj != null" >
        buyHJ = #{record.buyhj,jdbcType=VARCHAR},
      </if>
      <if test="record.buyphone != null" >
        buyPhone = #{record.buyphone,jdbcType=VARCHAR},
      </if>
      <if test="record.buylevel != null" >
        buyLevel = #{record.buylevel,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update buyer
    set id = #{record.id,jdbcType=INTEGER},
      buyName = #{record.buyname,jdbcType=VARCHAR},
      buySti = #{record.buysti,jdbcType=VARCHAR},
      buyDate = #{record.buydate,jdbcType=TIMESTAMP},
      houseId = #{record.houseid,jdbcType=INTEGER},
      buyIncome = #{record.buyincome,jdbcType=INTEGER},
      buyType = #{record.buytype,jdbcType=VARCHAR},
      buyHJ = #{record.buyhj,jdbcType=VARCHAR},
      buyPhone = #{record.buyphone,jdbcType=VARCHAR},
      buyLevel = #{record.buylevel,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Buyer" >
    update buyer
    <set >
      <if test="buyname != null" >
        buyName = #{buyname,jdbcType=VARCHAR},
      </if>
      <if test="buysti != null" >
        buySti = #{buysti,jdbcType=VARCHAR},
      </if>
      <if test="buydate != null" >
        buyDate = #{buydate,jdbcType=TIMESTAMP},
      </if>
      <if test="houseid != null" >
        houseId = #{houseid,jdbcType=INTEGER},
      </if>
      <if test="buyincome != null" >
        buyIncome = #{buyincome,jdbcType=INTEGER},
      </if>
      <if test="buytype != null" >
        buyType = #{buytype,jdbcType=VARCHAR},
      </if>
      <if test="buyhj != null" >
        buyHJ = #{buyhj,jdbcType=VARCHAR},
      </if>
      <if test="buyphone != null" >
        buyPhone = #{buyphone,jdbcType=VARCHAR},
      </if>
      <if test="buylevel != null" >
        buyLevel = #{buylevel,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Buyer" >
    update buyer
    set buyName = #{buyname,jdbcType=VARCHAR},
      buySti = #{buysti,jdbcType=VARCHAR},
      buyDate = #{buydate,jdbcType=TIMESTAMP},
      houseId = #{houseid,jdbcType=INTEGER},
      buyIncome = #{buyincome,jdbcType=INTEGER},
      buyType = #{buytype,jdbcType=VARCHAR},
      buyHJ = #{buyhj,jdbcType=VARCHAR},
      buyPhone = #{buyphone,jdbcType=VARCHAR},
      buyLevel = #{buylevel,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>