<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.HouseMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.entity.House" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="houseSn" property="housesn" jdbcType="VARCHAR" />
    <result column="buyId" property="buyid" jdbcType="INTEGER" />
    <result column="buyName" property="buyname" jdbcType="VARCHAR" />
    <result column="houseSellDate" property="houseselldate" jdbcType="TIMESTAMP" />
    <result column="houseYear" property="houseyear" jdbcType="INTEGER" />
    <result column="houseSize" property="housesize" jdbcType="DOUBLE" />
    <result column="houseCq" property="housecq" jdbcType="VARCHAR" />
    <result column="houseStatus" property="housestatus" jdbcType="INTEGER" />
    <result column="houseSeller" property="houseseller" jdbcType="INTEGER" />
    <result column="housePrice" property="houseprice" jdbcType="INTEGER" />
    <result column="buildingId" property="buildingid" jdbcType="INTEGER" />
  </resultMap>

  <select id="queryAllByPage" resultMap="BaseResultMap">
    SELECT * from house ORDER  BY id ASC
  </select>

    <select id="querySellingByPage" resultMap="BaseResultMap">
       SELECT * from house h WHERE h.housestatus= 0 ORDER  BY id ASC
    </select>

  <select id="querySoldByPage" resultMap="BaseResultMap">
    SELECT * from house h WHERE h.housestatus= 1 ORDER  BY id ASC
  </select>

    <select id="searchSellingHouse" resultMap="BaseResultMap">
        select * from house
        <where>
            <if test='keyword!=null'>
                housesn like "%"#{keyword}"%"
            </if>
        </where>
    </select>

  <select id="checkOutById" resultMap="BaseResultMap">
   UPDATE house SET houseStatus = 0 , buyId=NULL , buyName =NULL , houseSellDate =NULL WHERE id = #{id,jdbcType=INTEGER}
  </select>
  <select id="checkOutById2" resultMap="BaseResultMap">
    DELETE  FROM buyer WHERE houseid =  #{id,jdbcType=INTEGER}
  </select>

  <select id="statistics" resultType="com.example.demo.dto.Calcu">
    SELECT SUM(houseprice) as sum,COUNT(houseSn) as count FROM house
     WHERE houseStatus =1 and houseSellDate BETWEEN  #{startDate} and #{endDate}
  </select>



    <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, houseSn, buyId, buyName, houseSellDate, houseYear, houseSize, hosueCq, houseStatus, 
    houseSeller, housePrice, buildingId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.demo.entity.HouseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from house
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from house
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from house
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.HouseExample" >
    delete from house
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.House" >
    insert into house (id, houseSn, buyId, 
      buyName, houseSellDate, houseYear, 
      houseSize, hosueCq, houseStatus, 
      houseSeller, housePrice, buildingId
      )
    values (#{id,jdbcType=INTEGER}, #{housesn,jdbcType=VARCHAR}, #{buyid,jdbcType=INTEGER}, 
      #{buyname,jdbcType=VARCHAR}, #{houseselldate,jdbcType=TIMESTAMP}, #{houseyear,jdbcType=INTEGER}, 
      #{housesize,jdbcType=DOUBLE}, #{hosuecq,jdbcType=VARCHAR}, #{housestatus,jdbcType=INTEGER}, 
      #{houseseller,jdbcType=INTEGER}, #{houseprice,jdbcType=INTEGER}, #{buildingid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.House" >
    insert into house
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="housesn != null" >
        houseSn,
      </if>
      <if test="buyid != null" >
        buyId,
      </if>
      <if test="buyname != null" >
        buyName,
      </if>
      <if test="houseselldate != null" >
        houseSellDate,
      </if>
      <if test="houseyear != null" >
        houseYear,
      </if>
      <if test="housesize != null" >
        houseSize,
      </if>
      <if test="hosuecq != null" >
        hosueCq,
      </if>
      <if test="housestatus != null" >
        houseStatus,
      </if>
      <if test="houseseller != null" >
        houseSeller,
      </if>
      <if test="houseprice != null" >
        housePrice,
      </if>
      <if test="buildingid != null" >
        buildingId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="housesn != null" >
        #{housesn,jdbcType=VARCHAR},
      </if>
      <if test="buyid != null" >
        #{buyid,jdbcType=INTEGER},
      </if>
      <if test="buyname != null" >
        #{buyname,jdbcType=VARCHAR},
      </if>
      <if test="houseselldate != null" >
        #{houseselldate,jdbcType=TIMESTAMP},
      </if>
      <if test="houseyear != null" >
        #{houseyear,jdbcType=INTEGER},
      </if>
      <if test="housesize != null" >
        #{housesize,jdbcType=DOUBLE},
      </if>
      <if test="hosuecq != null" >
        #{hosuecq,jdbcType=VARCHAR},
      </if>
      <if test="housestatus != null" >
        #{housestatus,jdbcType=INTEGER},
      </if>
      <if test="houseseller != null" >
        #{houseseller,jdbcType=INTEGER},
      </if>
      <if test="houseprice != null" >
        #{houseprice,jdbcType=INTEGER},
      </if>
      <if test="buildingid != null" >
        #{buildingid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.HouseExample" resultType="java.lang.Integer" >
    select count(*) from house
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update house
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.housesn != null" >
        houseSn = #{record.housesn,jdbcType=VARCHAR},
      </if>
      <if test="record.buyid != null" >
        buyId = #{record.buyid,jdbcType=INTEGER},
      </if>
      <if test="record.buyname != null" >
        buyName = #{record.buyname,jdbcType=VARCHAR},
      </if>
      <if test="record.houseselldate != null" >
        houseSellDate = #{record.houseselldate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.houseyear != null" >
        houseYear = #{record.houseyear,jdbcType=INTEGER},
      </if>
      <if test="record.housesize != null" >
        houseSize = #{record.housesize,jdbcType=DOUBLE},
      </if>
      <if test="record.hosuecq != null" >
        hosueCq = #{record.hosuecq,jdbcType=VARCHAR},
      </if>
      <if test="record.housestatus != null" >
        houseStatus = #{record.housestatus,jdbcType=INTEGER},
      </if>
      <if test="record.houseseller != null" >
        houseSeller = #{record.houseseller,jdbcType=INTEGER},
      </if>
      <if test="record.houseprice != null" >
        housePrice = #{record.houseprice,jdbcType=INTEGER},
      </if>
      <if test="record.buildingid != null" >
        buildingId = #{record.buildingid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update house
    set id = #{record.id,jdbcType=INTEGER},
      houseSn = #{record.housesn,jdbcType=VARCHAR},
      buyId = #{record.buyid,jdbcType=INTEGER},
      buyName = #{record.buyname,jdbcType=VARCHAR},
      houseSellDate = #{record.houseselldate,jdbcType=TIMESTAMP},
      houseYear = #{record.houseyear,jdbcType=INTEGER},
      houseSize = #{record.housesize,jdbcType=DOUBLE},
      hosueCq = #{record.hosuecq,jdbcType=VARCHAR},
      houseStatus = #{record.housestatus,jdbcType=INTEGER},
      houseSeller = #{record.houseseller,jdbcType=INTEGER},
      housePrice = #{record.houseprice,jdbcType=INTEGER},
      buildingId = #{record.buildingid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.House" >
    update house
    <set >
      <if test="housesn != null" >
        houseSn = #{housesn,jdbcType=VARCHAR},
      </if>
      <if test="buyid != null" >
        buyId = #{buyid,jdbcType=INTEGER},
      </if>
      <if test="buyname != null" >
        buyName = #{buyname,jdbcType=VARCHAR},
      </if>
      <if test="houseselldate != null" >
        houseSellDate = #{houseselldate,jdbcType=TIMESTAMP},
      </if>
      <if test="houseyear != null" >
        houseYear = #{houseyear,jdbcType=INTEGER},
      </if>
      <if test="housesize != null" >
        houseSize = #{housesize,jdbcType=DOUBLE},
      </if>
      <if test="hosuecq != null" >
        hosueCq = #{hosuecq,jdbcType=VARCHAR},
      </if>
      <if test="housestatus != null" >
        houseStatus = #{housestatus,jdbcType=INTEGER},
      </if>
      <if test="houseseller != null" >
        houseSeller = #{houseseller,jdbcType=INTEGER},
      </if>
      <if test="houseprice != null" >
        housePrice = #{houseprice,jdbcType=INTEGER},
      </if>
      <if test="buildingid != null" >
        buildingId = #{buildingid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.House" >
    update house
    set houseSn = #{housesn,jdbcType=VARCHAR},
      buyId = #{buyid,jdbcType=INTEGER},
      buyName = #{buyname,jdbcType=VARCHAR},
      houseSellDate = #{houseselldate,jdbcType=TIMESTAMP},
      houseYear = #{houseyear,jdbcType=INTEGER},
      houseSize = #{housesize,jdbcType=DOUBLE},
      hosueCq = #{hosuecq,jdbcType=VARCHAR},
      houseStatus = #{housestatus,jdbcType=INTEGER},
      houseSeller = #{houseseller,jdbcType=INTEGER},
      housePrice = #{houseprice,jdbcType=INTEGER},
      buildingId = #{buildingid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>